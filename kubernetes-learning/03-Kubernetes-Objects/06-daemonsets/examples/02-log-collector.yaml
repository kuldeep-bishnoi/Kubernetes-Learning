# Log Collector DaemonSet Example
# This demonstrates a DaemonSet for collecting logs from all nodes

apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: fluentd-elasticsearch
  namespace: logging
  labels:
    app: fluentd-elasticsearch
    kubernetes.io/cluster-service: "true"
spec:
  selector:
    matchLabels:
      app: fluentd-elasticsearch
  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1  # Only one Pod can be unavailable during updates
  template:
    metadata:
      labels:
        app: fluentd-elasticsearch
      annotations:
        # This annotation ensures that fluentd does not get evicted if the node
        # supports critical pod annotation based priority scheme
        scheduler.alpha.kubernetes.io/critical-pod: ""
    spec:
      containers:
      - name: fluentd-elasticsearch
        image: quay.io/fluentd_elasticsearch/fluentd:v3.3.0
        env:
        - name: FLUENTD_ARGS
          value: --no-supervisor -q
        resources:
          limits:
            memory: 500Mi
          requests:
            cpu: 100m
            memory: 200Mi
        volumeMounts:
        # Mount host logs directories
        - name: varlog
          mountPath: /var/log
        - name: varlibdockercontainers
          mountPath: /var/lib/docker/containers
          readOnly: true
        - name: config-volume
          mountPath: /etc/fluent/config.d
        # Liveness probe ensures the pod is terminated if it becomes unhealthy
        livenessProbe:
          exec:
            command:
            - "/bin/sh"
            - "-c"
            - "ps aux | grep -v grep | grep fluentd"
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 5
        # Readiness probe ensures the pod is only considered ready when it can process logs
        readinessProbe:
          exec:
            command:
            - "/bin/sh"
            - "-c"
            - "ps aux | grep -v grep | grep fluentd"
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 3
      # Configure service account
      serviceAccountName: fluentd
      # Tolerate all nodes to collect logs from everything
      tolerations:
      - key: node-role.kubernetes.io/master
        effect: NoSchedule
      - key: node-role.kubernetes.io/control-plane
        effect: NoSchedule
      # Terminal grace period for proper log handling
      terminationGracePeriodSeconds: 30
      # Volumes for log collection
      volumes:
      - name: varlog
        hostPath:
          path: /var/log
      - name: varlibdockercontainers
        hostPath:
          path: /var/lib/docker/containers
      - name: config-volume
        configMap:
          name: fluentd-config

---
# ConfigMap for Fluentd configuration
apiVersion: v1
kind: ConfigMap
metadata:
  name: fluentd-config
  namespace: logging
data:
  fluent.conf: |
    # Fluentd main configuration
    <source>
      @type tail
      path /var/log/containers/*.log
      pos_file /var/log/fluentd-containers.log.pos
      tag kubernetes.*
      read_from_head true
      <parse>
        @type json
        time_format %Y-%m-%dT%H:%M:%S.%NZ
      </parse>
    </source>

    # Forward all logs to Elasticsearch
    <match kubernetes.**>
      @type elasticsearch
      host elasticsearch-logging
      port 9200
      logstash_format true
      logstash_prefix k8s
      <buffer>
        @type file
        path /var/log/fluentd-buffers/kubernetes.system.buffer
        flush_mode interval
        retry_type exponential_backoff
        flush_thread_count 2
        flush_interval 5s
        retry_forever true
        retry_max_interval 30
        chunk_limit_size 2M
        queue_limit_length 8
        overflow_action block
      </buffer>
    </match>

---
# Service Account for Fluentd
apiVersion: v1
kind: ServiceAccount
metadata:
  name: fluentd
  namespace: logging

---
# RBAC Configuration for Fluentd
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: fluentd
rules:
- apiGroups:
  - ""
  resources:
  - pods
  - namespaces
  verbs:
  - get
  - list
  - watch

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: fluentd
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: fluentd
subjects:
- kind: ServiceAccount
  name: fluentd
  namespace: logging 