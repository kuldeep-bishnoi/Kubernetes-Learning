apiVersion: v1
kind: Pod
metadata:
  name: nginx-advanced
  labels:
    app: nginx
    tier: frontend
    environment: demo
  annotations:
    description: "Nginx pod with resource limits and advanced configurations"
    creator: "Kubernetes Learning Guide"
spec:
  # Pod level settings
  restartPolicy: Always
  terminationGracePeriodSeconds: 30
  securityContext:
    runAsNonRoot: false  # Nginx typically runs as root
    fsGroup: 1000
  
  # Container definitions
  containers:
  - name: nginx
    image: nginx:1.21
    imagePullPolicy: IfNotPresent
    
    # Container ports
    ports:
    - name: http
      containerPort: 80
      protocol: TCP
    
    # Resource limits
    resources:
      requests:
        memory: "64Mi"
        cpu: "100m"
      limits:
        memory: "128Mi"
        cpu: "200m"
    
    # Environment variables
    env:
    - name: NGINX_HOST
      value: "example.com"
    - name: NGINX_PORT
      value: "80"
    - name: DEBUG_LEVEL
      value: "info"
    
    # Health checks
    livenessProbe:
      httpGet:
        path: /
        port: 80
      initialDelaySeconds: 30
      periodSeconds: 10
      timeoutSeconds: 5
      failureThreshold: 3
    
    readinessProbe:
      httpGet:
        path: /
        port: 80
      initialDelaySeconds: 5
      periodSeconds: 5
    
    # Volume mounts
    volumeMounts:
    - name: nginx-config
      mountPath: /etc/nginx/conf.d
    - name: content
      mountPath: /usr/share/nginx/html
  
  # Init container to set up custom index.html
  initContainers:
  - name: init-html
    image: busybox:1.28
    command: ['sh', '-c', 'echo "<h1>Welcome to Kubernetes Learning!</h1>" > /html/index.html']
    volumeMounts:
    - name: content
      mountPath: /html
  
  # Volumes
  volumes:
  - name: nginx-config
    configMap:
      name: nginx-config  # This would be created separately
      optional: true
  - name: content
    emptyDir: {}  # Ephemeral volume that lasts for the pod's lifetime 